// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	Latitude             float32  `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type TimeRange struct {
	TimeFrom             int64    `protobuf:"varint,1,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo               int64    `protobuf:"varint,2,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetTimeFrom() int64 {
	if m != nil {
		return m.TimeFrom
	}
	return 0
}

func (m *TimeRange) GetTimeTo() int64 {
	if m != nil {
		return m.TimeTo
	}
	return 0
}

type Users struct {
	Ids                  []int64  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Courier struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string     `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName           string     `protobuf:"bytes,3,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Rating               float32    `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	TimeRange            *TimeRange `protobuf:"bytes,5,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	ShopName             string     `protobuf:"bytes,6,opt,name=shopName,proto3" json:"shopName,omitempty"`
	Description          string     `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Link                 string     `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	ChatId               int64      `protobuf:"varint,9,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Courier) Reset()         { *m = Courier{} }
func (m *Courier) String() string { return proto.CompactTextString(m) }
func (*Courier) ProtoMessage()    {}
func (*Courier) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *Courier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Courier.Unmarshal(m, b)
}
func (m *Courier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Courier.Marshal(b, m, deterministic)
}
func (m *Courier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Courier.Merge(m, src)
}
func (m *Courier) XXX_Size() int {
	return xxx_messageInfo_Courier.Size(m)
}
func (m *Courier) XXX_DiscardUnknown() {
	xxx_messageInfo_Courier.DiscardUnknown(m)
}

var xxx_messageInfo_Courier proto.InternalMessageInfo

func (m *Courier) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Courier) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Courier) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *Courier) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Courier) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *Courier) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *Courier) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Courier) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Courier) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type RegistrationRequest struct {
	Id                   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname             string    `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FirstName            string    `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	SecondName           string    `protobuf:"bytes,4,opt,name=secondName,proto3" json:"secondName,omitempty"`
	Location             *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Notification         bool      `protobuf:"varint,6,opt,name=notification,proto3" json:"notification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegistrationRequest) Reset()         { *m = RegistrationRequest{} }
func (m *RegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*RegistrationRequest) ProtoMessage()    {}
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *RegistrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistrationRequest.Unmarshal(m, b)
}
func (m *RegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistrationRequest.Marshal(b, m, deterministic)
}
func (m *RegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistrationRequest.Merge(m, src)
}
func (m *RegistrationRequest) XXX_Size() int {
	return xxx_messageInfo_RegistrationRequest.Size(m)
}
func (m *RegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegistrationRequest proto.InternalMessageInfo

func (m *RegistrationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RegistrationRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *RegistrationRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegistrationRequest) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *RegistrationRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RegistrationRequest) GetNotification() bool {
	if m != nil {
		return m.Notification
	}
	return false
}

type CodeResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Error                bool     `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeResponse) Reset()         { *m = CodeResponse{} }
func (m *CodeResponse) String() string { return proto.CompactTextString(m) }
func (*CodeResponse) ProtoMessage()    {}
func (*CodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *CodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeResponse.Unmarshal(m, b)
}
func (m *CodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeResponse.Marshal(b, m, deterministic)
}
func (m *CodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeResponse.Merge(m, src)
}
func (m *CodeResponse) XXX_Size() int {
	return xxx_messageInfo_CodeResponse.Size(m)
}
func (m *CodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CodeResponse proto.InternalMessageInfo

func (m *CodeResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CodeResponse) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

type DeleteRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AddCourierRequest struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopName             string     `protobuf:"bytes,2,opt,name=shopName,proto3" json:"shopName,omitempty"`
	TimeRange            *TimeRange `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	Description          string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Link                 string     `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	ChatId               int64      `protobuf:"varint,6,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AddCourierRequest) Reset()         { *m = AddCourierRequest{} }
func (m *AddCourierRequest) String() string { return proto.CompactTextString(m) }
func (*AddCourierRequest) ProtoMessage()    {}
func (*AddCourierRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *AddCourierRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCourierRequest.Unmarshal(m, b)
}
func (m *AddCourierRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCourierRequest.Marshal(b, m, deterministic)
}
func (m *AddCourierRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCourierRequest.Merge(m, src)
}
func (m *AddCourierRequest) XXX_Size() int {
	return xxx_messageInfo_AddCourierRequest.Size(m)
}
func (m *AddCourierRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCourierRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCourierRequest proto.InternalMessageInfo

func (m *AddCourierRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddCourierRequest) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *AddCourierRequest) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *AddCourierRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddCourierRequest) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *AddCourierRequest) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type UserRequest struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TimeRange            *TimeRange `protobuf:"bytes,2,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserRequest) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

type GetCourierResponse struct {
	Courier              []*Courier `protobuf:"bytes,1,rep,name=courier,proto3" json:"courier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetCourierResponse) Reset()         { *m = GetCourierResponse{} }
func (m *GetCourierResponse) String() string { return proto.CompactTextString(m) }
func (*GetCourierResponse) ProtoMessage()    {}
func (*GetCourierResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *GetCourierResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCourierResponse.Unmarshal(m, b)
}
func (m *GetCourierResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCourierResponse.Marshal(b, m, deterministic)
}
func (m *GetCourierResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCourierResponse.Merge(m, src)
}
func (m *GetCourierResponse) XXX_Size() int {
	return xxx_messageInfo_GetCourierResponse.Size(m)
}
func (m *GetCourierResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCourierResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCourierResponse proto.InternalMessageInfo

func (m *GetCourierResponse) GetCourier() []*Courier {
	if m != nil {
		return m.Courier
	}
	return nil
}

type NewCourier struct {
	Ids                  []int64  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Courier              *Courier `protobuf:"bytes,2,opt,name=courier,proto3" json:"courier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewCourier) Reset()         { *m = NewCourier{} }
func (m *NewCourier) String() string { return proto.CompactTextString(m) }
func (*NewCourier) ProtoMessage()    {}
func (*NewCourier) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *NewCourier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCourier.Unmarshal(m, b)
}
func (m *NewCourier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCourier.Marshal(b, m, deterministic)
}
func (m *NewCourier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCourier.Merge(m, src)
}
func (m *NewCourier) XXX_Size() int {
	return xxx_messageInfo_NewCourier.Size(m)
}
func (m *NewCourier) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCourier.DiscardUnknown(m)
}

var xxx_messageInfo_NewCourier proto.InternalMessageInfo

func (m *NewCourier) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *NewCourier) GetCourier() *Courier {
	if m != nil {
		return m.Courier
	}
	return nil
}

type RatingRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rating               float32  `protobuf:"fixed32,2,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatingRequest) Reset()         { *m = RatingRequest{} }
func (m *RatingRequest) String() string { return proto.CompactTextString(m) }
func (*RatingRequest) ProtoMessage()    {}
func (*RatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{11}
}

func (m *RatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatingRequest.Unmarshal(m, b)
}
func (m *RatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatingRequest.Marshal(b, m, deterministic)
}
func (m *RatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatingRequest.Merge(m, src)
}
func (m *RatingRequest) XXX_Size() int {
	return xxx_messageInfo_RatingRequest.Size(m)
}
func (m *RatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RatingRequest proto.InternalMessageInfo

func (m *RatingRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RatingRequest) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func init() {
	proto.RegisterType((*Location)(nil), "Location")
	proto.RegisterType((*TimeRange)(nil), "TimeRange")
	proto.RegisterType((*Users)(nil), "Users")
	proto.RegisterType((*Courier)(nil), "Courier")
	proto.RegisterType((*RegistrationRequest)(nil), "RegistrationRequest")
	proto.RegisterType((*CodeResponse)(nil), "CodeResponse")
	proto.RegisterType((*DeleteRequest)(nil), "DeleteRequest")
	proto.RegisterType((*AddCourierRequest)(nil), "AddCourierRequest")
	proto.RegisterType((*UserRequest)(nil), "UserRequest")
	proto.RegisterType((*GetCourierResponse)(nil), "GetCourierResponse")
	proto.RegisterType((*NewCourier)(nil), "NewCourier")
	proto.RegisterType((*RatingRequest)(nil), "ratingRequest")
}

func init() {
	proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd)
}

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x55, 0x9c, 0x26, 0xb1, 0x6f, 0x1e, 0x2a, 0xd3, 0x52, 0x4c, 0x78, 0x34, 0xb2, 0x84, 0x14,
	0x51, 0xea, 0x42, 0x11, 0x6a, 0x77, 0x28, 0x4d, 0x45, 0x54, 0xa9, 0xea, 0xc2, 0x2d, 0x1b, 0x36,
	0x95, 0xb1, 0x6f, 0x92, 0x51, 0x6d, 0x4f, 0x98, 0x99, 0x14, 0xf1, 0x03, 0x2c, 0xf8, 0x22, 0xbe,
	0x81, 0xaf, 0x42, 0x1e, 0x3b, 0x8e, 0xed, 0x26, 0x51, 0x77, 0xb9, 0x8f, 0x39, 0xba, 0xf7, 0x9c,
	0x73, 0x1d, 0x68, 0x87, 0x28, 0x84, 0x3b, 0x41, 0x7b, 0xc6, 0x99, 0x64, 0xd6, 0x39, 0xe8, 0x97,
	0xcc, 0x73, 0x25, 0x65, 0x11, 0xe9, 0x82, 0x1e, 0xb8, 0x92, 0xca, 0xb9, 0x8f, 0x66, 0xa5, 0x57,
	0xe9, 0x6b, 0x4e, 0x16, 0x93, 0x97, 0x60, 0x04, 0x2c, 0x9a, 0x24, 0x45, 0x4d, 0x15, 0x97, 0x09,
	0x6b, 0x00, 0xc6, 0x0d, 0x0d, 0xd1, 0x71, 0xa3, 0x09, 0x92, 0x17, 0x60, 0x48, 0x1a, 0xe2, 0xed,
	0x98, 0xb3, 0x50, 0xe1, 0x54, 0x1d, 0x3d, 0x4e, 0x7c, 0xe1, 0x2c, 0x24, 0xcf, 0xa0, 0xa1, 0x8a,
	0x92, 0x29, 0x94, 0xaa, 0x53, 0x8f, 0xc3, 0x1b, 0x66, 0x3d, 0x87, 0xda, 0x57, 0x81, 0x5c, 0x90,
	0x6d, 0xa8, 0x52, 0x5f, 0x98, 0x95, 0x5e, 0xb5, 0x5f, 0x75, 0xe2, 0x9f, 0xd6, 0x6f, 0x0d, 0x1a,
	0x43, 0x36, 0xe7, 0x14, 0x39, 0xe9, 0x80, 0x46, 0xfd, 0x14, 0x55, 0xa3, 0x3e, 0x79, 0x05, 0x30,
	0xa6, 0x5c, 0xc8, 0xdb, 0xc8, 0x0d, 0x93, 0xc1, 0x0c, 0xc7, 0x50, 0x99, 0x2b, 0x37, 0x44, 0xb2,
	0x0f, 0x4d, 0x81, 0x1e, 0x8b, 0xfc, 0xa4, 0x5e, 0x55, 0x75, 0x48, 0x52, 0xaa, 0x61, 0x0f, 0xea,
	0xdc, 0x95, 0x34, 0x9a, 0x98, 0x5b, 0x6a, 0xa9, 0x34, 0x22, 0xfd, 0x64, 0x09, 0xb5, 0x91, 0x59,
	0xeb, 0x55, 0xfa, 0xcd, 0x63, 0xb0, 0xb3, 0x1d, 0x9d, 0x65, 0x31, 0x66, 0x4d, 0x4c, 0xd9, 0x2c,
	0x46, 0x33, 0xeb, 0x0a, 0x3f, 0x8b, 0x49, 0x0f, 0x9a, 0x3e, 0x0a, 0x8f, 0xd3, 0x59, 0x4c, 0xb0,
	0xd9, 0x50, 0xe5, 0x7c, 0x8a, 0x10, 0xd8, 0x0a, 0x68, 0x74, 0x67, 0xea, 0xaa, 0xa4, 0x7e, 0xc7,
	0x1c, 0x79, 0x53, 0x57, 0xde, 0x52, 0xdf, 0x34, 0x12, 0x8e, 0xe2, 0xf0, 0xc2, 0xb7, 0xfe, 0x55,
	0x60, 0xc7, 0xc1, 0x09, 0x15, 0x92, 0x2b, 0xc5, 0x1c, 0xfc, 0x31, 0x47, 0x21, 0x1f, 0x90, 0xd2,
	0x05, 0x3d, 0xa2, 0xde, 0x5d, 0x8e, 0x92, 0x2c, 0x8e, 0x85, 0xcc, 0xe8, 0x49, 0xf9, 0xc8, 0xf1,
	0xf5, 0x1a, 0x72, 0xe4, 0x28, 0x4a, 0x8a, 0x74, 0xbd, 0x01, 0x3d, 0x48, 0xed, 0x92, 0xb2, 0x62,
	0xd8, 0x0b, 0xff, 0x38, 0x59, 0x89, 0x58, 0xd0, 0x8a, 0x98, 0xa4, 0x63, 0x9a, 0xb6, 0xc6, 0xbc,
	0xe8, 0x4e, 0x21, 0x67, 0x9d, 0x42, 0x6b, 0xc8, 0x7c, 0x74, 0x50, 0xcc, 0x58, 0x24, 0x30, 0x66,
	0xc2, 0x63, 0xa9, 0xf3, 0x0c, 0x47, 0xfd, 0x26, 0xbb, 0x50, 0x43, 0xce, 0x19, 0x57, 0x5b, 0xe8,
	0x4e, 0x12, 0x58, 0xfb, 0xd0, 0x3e, 0xc7, 0x00, 0x25, 0xae, 0xd9, 0xdf, 0xfa, 0x5b, 0x81, 0x27,
	0x03, 0xdf, 0x4f, 0x3d, 0xb3, 0x81, 0xa5, 0x4c, 0x38, 0xad, 0x24, 0x5c, 0x41, 0xfe, 0xea, 0x26,
	0xf9, 0x4b, 0x12, 0x6f, 0xad, 0x97, 0xb8, 0xb6, 0x5a, 0xe2, 0x7a, 0x41, 0xe2, 0x11, 0x34, 0xe3,
	0x33, 0x58, 0x37, 0x73, 0x61, 0x2e, 0x6d, 0xc3, 0x5c, 0xd6, 0x29, 0x90, 0x11, 0xca, 0x8c, 0x82,
	0x94, 0x64, 0x0b, 0x1a, 0x5e, 0x92, 0x52, 0x07, 0xd6, 0x3c, 0xd6, 0xed, 0x45, 0xcb, 0xa2, 0x60,
	0x9d, 0x01, 0x5c, 0xe1, 0xcf, 0xc5, 0xc1, 0x3d, 0x38, 0xc7, 0x3c, 0x46, 0x32, 0xc1, 0x0a, 0x8c,
	0x13, 0x68, 0x27, 0x87, 0xb4, 0x6e, 0x91, 0xe5, 0xdd, 0x69, 0xf9, 0xbb, 0x3b, 0xfe, 0x53, 0x83,
	0xce, 0x39, 0x06, 0xf4, 0x1e, 0xf9, 0xaf, 0x6b, 0xe4, 0xf7, 0xc8, 0xc9, 0x09, 0x6c, 0xe7, 0x4d,
	0x1f, 0xd3, 0x43, 0x76, 0xed, 0x15, 0x77, 0xd0, 0x6d, 0xdb, 0x05, 0x47, 0x1d, 0x00, 0x24, 0x3e,
	0x51, 0x4f, 0x3a, 0x76, 0xc1, 0x34, 0xe5, 0xe6, 0x43, 0x80, 0xa5, 0x65, 0x08, 0xb1, 0x1f, 0xf8,
	0xa7, 0xdb, 0xb4, 0x73, 0xb4, 0xd8, 0x0b, 0x0f, 0x66, 0x1f, 0xa6, 0xcd, 0xf0, 0xef, 0xa0, 0x7d,
	0x49, 0x85, 0xc4, 0x68, 0xd1, 0xdf, 0xb2, 0x73, 0x3a, 0x17, 0xb0, 0xdf, 0x57, 0xc8, 0x11, 0xc0,
	0x52, 0xbc, 0x52, 0xeb, 0x8e, 0xbd, 0x42, 0xd7, 0x03, 0x68, 0x0d, 0xa7, 0xe8, 0xdd, 0xad, 0x7e,
	0x52, 0x9a, 0xe5, 0x13, 0x74, 0x86, 0xd3, 0xd8, 0x24, 0xd9, 0x97, 0xff, 0x51, 0x74, 0x7e, 0x06,
	0x33, 0x79, 0x76, 0x95, 0x3b, 0xe3, 0x6b, 0xe9, 0xca, 0xb9, 0x78, 0x1c, 0xc0, 0x07, 0x68, 0x8e,
	0x50, 0xc6, 0x83, 0x5d, 0x44, 0x63, 0x56, 0x9a, 0x71, 0x25, 0x02, 0xe9, 0x81, 0x9e, 0x3e, 0x11,
	0xa5, 0xfe, 0xba, 0x9d, 0x64, 0x6d, 0xd8, 0x1b, 0xa1, 0x1c, 0x04, 0x41, 0x7e, 0x2a, 0x25, 0xf8,
	0xea, 0xfe, 0xb7, 0x60, 0x0c, 0x7c, 0xdf, 0x49, 0xbe, 0xf2, 0x1d, 0xbb, 0xe0, 0xd2, 0xd2, 0xc0,
	0x67, 0x4f, 0xbf, 0xed, 0x78, 0x6e, 0x38, 0x9b, 0x8b, 0x43, 0x3f, 0xb5, 0xe4, 0x91, 0x3b, 0xa3,
	0xdf, 0xeb, 0xea, 0xaf, 0xf3, 0xe3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x4d, 0x3f, 0x79,
	0x4b, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeliveryServerClient is the client API for DeliveryServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeliveryServerClient interface {
	RegistrationUser(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	DeleteUser(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	AddCourier(ctx context.Context, in *AddCourierRequest, opts ...grpc.CallOption) (*NewCourier, error)
	DeleteCourier(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	ListenCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (DeliveryServer_ListenCourierClient, error)
	GetCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GetCourierResponse, error)
	CheckCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	ChangeLocation(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	ChangeNotificationStatus(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error)
	GetUserInfo(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*RegistrationRequest, error)
	GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Users, error)
	GetAllNotificationUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Users, error)
	AddRating(ctx context.Context, in *RatingRequest, opts ...grpc.CallOption) (*CodeResponse, error)
}

type deliveryServerClient struct {
	cc grpc.ClientConnInterface
}

func NewDeliveryServerClient(cc grpc.ClientConnInterface) DeliveryServerClient {
	return &deliveryServerClient{cc}
}

func (c *deliveryServerClient) RegistrationUser(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/RegistrationUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) DeleteUser(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) AddCourier(ctx context.Context, in *AddCourierRequest, opts ...grpc.CallOption) (*NewCourier, error) {
	out := new(NewCourier)
	err := c.cc.Invoke(ctx, "/DeliveryServer/AddCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) DeleteCourier(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/DeleteCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) ListenCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (DeliveryServer_ListenCourierClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeliveryServer_serviceDesc.Streams[0], "/DeliveryServer/ListenCourier", opts...)
	if err != nil {
		return nil, err
	}
	x := &deliveryServerListenCourierClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeliveryServer_ListenCourierClient interface {
	Recv() (*NewCourier, error)
	grpc.ClientStream
}

type deliveryServerListenCourierClient struct {
	grpc.ClientStream
}

func (x *deliveryServerListenCourierClient) Recv() (*NewCourier, error) {
	m := new(NewCourier)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deliveryServerClient) GetCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GetCourierResponse, error) {
	out := new(GetCourierResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/GetCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) CheckCourier(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/CheckCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) ChangeLocation(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/ChangeLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) ChangeNotificationStatus(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/ChangeNotificationStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) GetUserInfo(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*RegistrationRequest, error) {
	out := new(RegistrationRequest)
	err := c.cc.Invoke(ctx, "/DeliveryServer/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/DeliveryServer/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) GetAllNotificationUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/DeliveryServer/GetAllNotificationUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryServerClient) AddRating(ctx context.Context, in *RatingRequest, opts ...grpc.CallOption) (*CodeResponse, error) {
	out := new(CodeResponse)
	err := c.cc.Invoke(ctx, "/DeliveryServer/AddRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeliveryServerServer is the server API for DeliveryServer service.
type DeliveryServerServer interface {
	RegistrationUser(context.Context, *RegistrationRequest) (*CodeResponse, error)
	DeleteUser(context.Context, *DeleteRequest) (*CodeResponse, error)
	AddCourier(context.Context, *AddCourierRequest) (*NewCourier, error)
	DeleteCourier(context.Context, *DeleteRequest) (*CodeResponse, error)
	ListenCourier(*UserRequest, DeliveryServer_ListenCourierServer) error
	GetCourier(context.Context, *UserRequest) (*GetCourierResponse, error)
	CheckCourier(context.Context, *UserRequest) (*CodeResponse, error)
	ChangeLocation(context.Context, *RegistrationRequest) (*CodeResponse, error)
	ChangeNotificationStatus(context.Context, *RegistrationRequest) (*CodeResponse, error)
	GetUserInfo(context.Context, *UserRequest) (*RegistrationRequest, error)
	GetUsers(context.Context, *UserRequest) (*Users, error)
	GetAllNotificationUser(context.Context, *UserRequest) (*Users, error)
	AddRating(context.Context, *RatingRequest) (*CodeResponse, error)
}

// UnimplementedDeliveryServerServer can be embedded to have forward compatible implementations.
type UnimplementedDeliveryServerServer struct {
}

func (*UnimplementedDeliveryServerServer) RegistrationUser(ctx context.Context, req *RegistrationRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegistrationUser not implemented")
}
func (*UnimplementedDeliveryServerServer) DeleteUser(ctx context.Context, req *DeleteRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedDeliveryServerServer) AddCourier(ctx context.Context, req *AddCourierRequest) (*NewCourier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCourier not implemented")
}
func (*UnimplementedDeliveryServerServer) DeleteCourier(ctx context.Context, req *DeleteRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCourier not implemented")
}
func (*UnimplementedDeliveryServerServer) ListenCourier(req *UserRequest, srv DeliveryServer_ListenCourierServer) error {
	return status.Errorf(codes.Unimplemented, "method ListenCourier not implemented")
}
func (*UnimplementedDeliveryServerServer) GetCourier(ctx context.Context, req *UserRequest) (*GetCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourier not implemented")
}
func (*UnimplementedDeliveryServerServer) CheckCourier(ctx context.Context, req *UserRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCourier not implemented")
}
func (*UnimplementedDeliveryServerServer) ChangeLocation(ctx context.Context, req *RegistrationRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeLocation not implemented")
}
func (*UnimplementedDeliveryServerServer) ChangeNotificationStatus(ctx context.Context, req *RegistrationRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeNotificationStatus not implemented")
}
func (*UnimplementedDeliveryServerServer) GetUserInfo(ctx context.Context, req *UserRequest) (*RegistrationRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedDeliveryServerServer) GetUsers(ctx context.Context, req *UserRequest) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedDeliveryServerServer) GetAllNotificationUser(ctx context.Context, req *UserRequest) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllNotificationUser not implemented")
}
func (*UnimplementedDeliveryServerServer) AddRating(ctx context.Context, req *RatingRequest) (*CodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRating not implemented")
}

func RegisterDeliveryServerServer(s *grpc.Server, srv DeliveryServerServer) {
	s.RegisterService(&_DeliveryServer_serviceDesc, srv)
}

func _DeliveryServer_RegistrationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).RegistrationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/RegistrationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).RegistrationUser(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).DeleteUser(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_AddCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).AddCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/AddCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).AddCourier(ctx, req.(*AddCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_DeleteCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).DeleteCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/DeleteCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).DeleteCourier(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_ListenCourier_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeliveryServerServer).ListenCourier(m, &deliveryServerListenCourierServer{stream})
}

type DeliveryServer_ListenCourierServer interface {
	Send(*NewCourier) error
	grpc.ServerStream
}

type deliveryServerListenCourierServer struct {
	grpc.ServerStream
}

func (x *deliveryServerListenCourierServer) Send(m *NewCourier) error {
	return x.ServerStream.SendMsg(m)
}

func _DeliveryServer_GetCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).GetCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/GetCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).GetCourier(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_CheckCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).CheckCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/CheckCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).CheckCourier(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_ChangeLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).ChangeLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/ChangeLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).ChangeLocation(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_ChangeNotificationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).ChangeNotificationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/ChangeNotificationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).ChangeNotificationStatus(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).GetUserInfo(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).GetUsers(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_GetAllNotificationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).GetAllNotificationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/GetAllNotificationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).GetAllNotificationUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryServer_AddRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServerServer).AddRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeliveryServer/AddRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServerServer).AddRating(ctx, req.(*RatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeliveryServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DeliveryServer",
	HandlerType: (*DeliveryServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegistrationUser",
			Handler:    _DeliveryServer_RegistrationUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _DeliveryServer_DeleteUser_Handler,
		},
		{
			MethodName: "AddCourier",
			Handler:    _DeliveryServer_AddCourier_Handler,
		},
		{
			MethodName: "DeleteCourier",
			Handler:    _DeliveryServer_DeleteCourier_Handler,
		},
		{
			MethodName: "GetCourier",
			Handler:    _DeliveryServer_GetCourier_Handler,
		},
		{
			MethodName: "CheckCourier",
			Handler:    _DeliveryServer_CheckCourier_Handler,
		},
		{
			MethodName: "ChangeLocation",
			Handler:    _DeliveryServer_ChangeLocation_Handler,
		},
		{
			MethodName: "ChangeNotificationStatus",
			Handler:    _DeliveryServer_ChangeNotificationStatus_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _DeliveryServer_GetUserInfo_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _DeliveryServer_GetUsers_Handler,
		},
		{
			MethodName: "GetAllNotificationUser",
			Handler:    _DeliveryServer_GetAllNotificationUser_Handler,
		},
		{
			MethodName: "AddRating",
			Handler:    _DeliveryServer_AddRating_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListenCourier",
			Handler:       _DeliveryServer_ListenCourier_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "message.proto",
}
